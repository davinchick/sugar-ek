{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\PRACTICE\\\\sugarWebSite\\\\sugar\\\\src\\\\context\\\\context.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nexport const Context = /*#__PURE__*/React.createContext({});\nexport class Provider extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      amountOfRead: 0\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        state: this.state,\n        changeAmount: () => this.setState(prev => prev += 1)\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["H:/PRACTICE/sugarWebSite/sugar/src/context/context.js"],"names":["React","Context","createContext","Provider","Component","amountOfRead","render","state","changeAmount","setState","prev","props","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,gBAAGD,KAAK,CAACE,aAAN,CAAoB,EAApB,CAAhB;AAEP,OAAO,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAClC;AACJC,MAAAA,YAAY,EAAE;AADV,KADkC;AAAA;;AAK1CC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE;AACrBC,QAAAA,KAAK,EAAE,KAAKA,KADS;AAErBC,QAAAA,YAAY,EAAE,MAAK,KAAKC,QAAL,CAAeC,IAAD,IAAUA,IAAI,IAAE,CAA9B;AAFE,OAAzB;AAAA,gBAGK,KAAKC,KAAL,CAAWC;AAHhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAbyC","sourcesContent":["import React from 'react'\r\n\r\nexport const Context = React.createContext({})\r\n\r\nexport class Provider extends React.Component {\r\n    state = {\r\n        amountOfRead: 0,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={{\r\n                state: this.state,\r\n                changeAmount: ()=> this.setState((prev) => prev+=1)}}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
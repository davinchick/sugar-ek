{"ast":null,"code":"var _jsxFileName = \"H:\\\\PRACTICE\\\\sugarWebSite\\\\sugar\\\\components\\\\pubMedComponent.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport './components.css';\nexport function PubMedComponent() {\n  const {\n    0: countOfOverlap,\n    1: setCountOfOverlap\n  } = useState(0);\n  const {\n    0: listOfIdOverlaps,\n    1: setListOfIdOverlaps\n  } = useState([]);\n  const {\n    0: query,\n    1: setQuery\n  } = useState('sugar intake');\n  const {\n    0: inputSearchValue,\n    1: setInputSearchValue\n  } = useState('');\n  const {\n    0: selectedValueId,\n    1: setSelectedValueId\n  } = useState(listOfIdOverlaps[0]);\n  const apiPub = `http://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&retmode=json&retmax=1000&term=${query.split(' ').join('+')}&field=title`;\n  const fetchMoreFromId = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=${selectedValueId}`;\n  const searchArticleById = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=${selectedValueId}&retmode=json`;\n  const {\n    0: isFoundArticle,\n    1: setIsFoundArticle\n  } = useState(false);\n  const {\n    0: articleText,\n    1: setArticleText\n  } = useState();\n  const {\n    0: articleCitation,\n    1: setArticleCitation\n  } = useState('');\n  useEffect(() => {\n    getDataFromSearch();\n  }, [query]);\n\n  const getDataFromSearch = async () => {\n    const response = await fetch(`https://cors-anywhere.herokuapp.com/${apiPub}`);\n    const res = await response.json(); // console.log(data.hits);\n\n    setCountOfOverlap(res.esearchresult.count);\n    setListOfIdOverlaps(res.esearchresult.idlist);\n  };\n\n  const changeInputSearch = e => {\n    setInputSearchValue(e.target.value);\n  };\n\n  const searchItemsByInputValue = e => {\n    e.preventDefault();\n    setCountOfOverlap(0);\n    setQuery(inputSearchValue);\n    setInputSearchValue('');\n  };\n\n  const searchItemsBySelectedId = async () => {\n    const data = await fetch(`https://cors-anywhere.herokuapp.com/${searchArticleById}`);\n    const res = await data.json();\n    const resultJson = res.result[selectedValueId]; // console.log(resultJson);\n\n    if (resultJson) {\n      const article = __jsx(\"div\", {\n        className: \"item_1_5 item_md_2 item_lg_3 flex-full\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, __jsx(\"h4\", {\n        className: \"article_title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, res.result[selectedValueId].title), __jsx(\"p\", {\n        className: \"article_date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, res.result[selectedValueId].pubdate), __jsx(\"p\", {\n        className: \"article_source\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"undescore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 47\n        }\n      }, \"Source:\"), \" \", res.result[selectedValueId].source), __jsx(\"p\", {\n        className: \"article_journal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"undescore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 48\n        }\n      }, \"From journal:\"), \" \", res.result[selectedValueId].fulljournalname), __jsx(\"p\", {\n        className: \"article_authors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"undescore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 48\n        }\n      }, \"Authors:\"), \" \", res.result[selectedValueId].authors.map(el => el.name).join(', ')));\n\n      setArticleText(article);\n      setIsFoundArticle(true);\n    } else {\n      const message = __jsx(\"p\", {\n        className: \"notFound\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, \"Not found any information .. or it's private article\");\n\n      setArticleText(message);\n      setIsFoundArticle(false);\n    }\n  };\n\n  const fetchMoreFromSelectedId = async () => {\n    const data = await fetch(`https://cors-anywhere.herokuapp.com/${fetchMoreFromId}`);\n    const res = await data.text();\n    let textCitation = ''; // console.log(res);\n\n    if (res) {\n      const text = res.split('abstract')[1];\n\n      if (text) {\n        textCitation = text.split('pmid')[0];\n      } else {\n        textCitation = text;\n      }\n    } else {\n      textCitation = \"Not found any citation\";\n    }\n\n    setArticleCitation(textCitation);\n  };\n\n  const setIdFromSelect = e => {\n    setSelectedValueId(e.target.value);\n    searchItemsBySelectedId();\n    fetchMoreFromSelectedId();\n  };\n\n  return __jsx(\"div\", {\n    className: \"grid_container zIndex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: \"gradient_abs gradient_abs__top\",\n    src: '/img/gradients/gradient_blue.svg',\n    alt: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"item_1_4 item_md_4 item_lg_4 mt3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Data from \", __jsx(\"a\", {\n    href: \"https://http://www.ncbi.nlm.nih.gov\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 35\n    }\n  }, \"PubMed Central\")), __jsx(\"div\", {\n    className: \"boxShadow m0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    action: \"\",\n    className: \"searchForm\",\n    onSubmit: searchItemsByInputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"searchInput\",\n    onChange: e => changeInputSearch(e),\n    value: inputSearchValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }), __jsx(\"button\", {\n    className: \"submitInputSearch\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, \"Find\")), __jsx(\"p\", {\n    className: \"fz_middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"There are now \", __jsx(\"em\", {\n    className: \"undescore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 64\n    }\n  }, countOfOverlap), \" overlaps according to search by phrase \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 36\n    }\n  }, \"'\", query, \"'\")), __jsx(\"p\", {\n    className: \"fz_middle searchSelect_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"List of Id\"), __jsx(\"select\", {\n    name: \"selectTheId\",\n    id: \"\",\n    className: \"searchSelect\",\n    onChange: e => setIdFromSelect(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, __jsx(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"-Select id-\"), listOfIdOverlaps.map((el, ind) => {\n    return __jsx(\"option\", {\n      key: el,\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 40\n      }\n    }, ind, \"): \", el);\n  })))), __jsx(\"div\", {\n    className: \"boxShadow item_fluid bg_light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"item_1_5 item_md_2 item_lg_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, __jsx(\"h3\", {\n    className: `searchItemTitle ${isFoundArticle ? 'colored_green' : 'colored_red'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, \"PMED_ID: \", selectedValueId), articleText, articleCitation ? __jsx(\"p\", {\n    className: \"articleCitation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    className: \"undescore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, \"Abstract:\"), articleCitation) : null))), __jsx(\"img\", {\n    className: \"gradient_abs gradient_abs__bottom\",\n    src: '/img/gradients/gradient_blue.svg',\n    alt: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }));\n}\n;","map":{"version":3,"sources":["H:/PRACTICE/sugarWebSite/sugar/components/pubMedComponent.js"],"names":["React","useEffect","useState","PubMedComponent","countOfOverlap","setCountOfOverlap","listOfIdOverlaps","setListOfIdOverlaps","query","setQuery","inputSearchValue","setInputSearchValue","selectedValueId","setSelectedValueId","apiPub","split","join","fetchMoreFromId","searchArticleById","isFoundArticle","setIsFoundArticle","articleText","setArticleText","articleCitation","setArticleCitation","getDataFromSearch","response","fetch","res","json","esearchresult","count","idlist","changeInputSearch","e","target","value","searchItemsByInputValue","preventDefault","searchItemsBySelectedId","data","resultJson","result","article","title","pubdate","source","fulljournalname","authors","map","el","name","message","fetchMoreFromSelectedId","text","textCitation","setIdFromSelect","ind"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport './components.css';\r\n\r\nexport function PubMedComponent() {\r\n\r\n    const [countOfOverlap, setCountOfOverlap] = useState(0);\r\n    const [listOfIdOverlaps, setListOfIdOverlaps] = useState([]);\r\n\r\n    const [query, setQuery] = useState('sugar intake');\r\n    const [inputSearchValue, setInputSearchValue] = useState('');\r\n    const [selectedValueId, setSelectedValueId] = useState(listOfIdOverlaps[0]);\r\n\r\n    const apiPub = `http://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&retmode=json&retmax=1000&term=${query.split(' ').join('+')}&field=title`;\r\n    const fetchMoreFromId = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=${selectedValueId}`;\r\n    const searchArticleById = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=${selectedValueId}&retmode=json`;\r\n    const [isFoundArticle, setIsFoundArticle] = useState(false);\r\n    const [articleText, setArticleText] = useState();\r\n    const [articleCitation, setArticleCitation] = useState('');\r\n\r\n    useEffect(() => {\r\n        getDataFromSearch()\r\n    }, [query]);\r\n\r\n    const getDataFromSearch = async () => {\r\n        const response = await fetch(`https://cors-anywhere.herokuapp.com/${apiPub}`);\r\n        const res = await response.json();\r\n        // console.log(data.hits);\r\n        setCountOfOverlap(res.esearchresult.count);\r\n        setListOfIdOverlaps(res.esearchresult.idlist);\r\n    };\r\n\r\n    const changeInputSearch = (e) => {\r\n        setInputSearchValue(e.target.value)\r\n    };\r\n\r\n    const searchItemsByInputValue = (e) => {\r\n        e.preventDefault();\r\n        setCountOfOverlap(0);\r\n        setQuery(inputSearchValue);\r\n        setInputSearchValue('');\r\n    };\r\n\r\n    const searchItemsBySelectedId = async () => {\r\n        const data = await fetch(`https://cors-anywhere.herokuapp.com/${searchArticleById}`);\r\n        const res = await data.json();\r\n\r\n        const resultJson = res.result[selectedValueId];\r\n        // console.log(resultJson);\r\n        if (resultJson) {\r\n            const article = <div className=\"item_1_5 item_md_2 item_lg_3 flex-full\">\r\n                <h4 className=\"article_title\">{res.result[selectedValueId].title}</h4>\r\n                <p className=\"article_date\">{res.result[selectedValueId].pubdate}</p>\r\n                <p className=\"article_source\"><span\r\n                    className=\"undescore\">Source:</span> {res.result[selectedValueId].source}</p>\r\n                <p className=\"article_journal\"><span\r\n                    className=\"undescore\">From journal:</span> {res.result[selectedValueId].fulljournalname}</p>\r\n                <p className=\"article_authors\"><span\r\n                    className=\"undescore\">Authors:</span> {res.result[selectedValueId].authors.map(el => el.name).join(', ')}\r\n                </p>\r\n            </div>;\r\n            setArticleText(article);\r\n            setIsFoundArticle(true)\r\n        } else {\r\n            const message = <p className=\"notFound\">Not found any information .. or it's private article</p>\r\n            setArticleText(message);\r\n            setIsFoundArticle(false)\r\n        }\r\n    };\r\n\r\n    const fetchMoreFromSelectedId = async () => {\r\n        const data = await fetch(`https://cors-anywhere.herokuapp.com/${fetchMoreFromId}`);\r\n        const res = await data.text();\r\n        let textCitation = '';\r\n        // console.log(res);\r\n        if (res) {\r\n            const text = res.split('abstract')[1];\r\n            if (text) {\r\n                textCitation = text.split('pmid')[0];\r\n            } else {\r\n                textCitation = text\r\n            }\r\n        } else {\r\n            textCitation = \"Not found any citation\";\r\n        }\r\n        setArticleCitation(textCitation);\r\n    };\r\n\r\n    const setIdFromSelect = (e) => {\r\n        setSelectedValueId(e.target.value);\r\n        searchItemsBySelectedId();\r\n        fetchMoreFromSelectedId();\r\n    };\r\n\r\n    return (\r\n        <div className=\"grid_container zIndex\">\r\n            <img className=\"gradient_abs gradient_abs__top\" src={'/img/gradients/gradient_blue.svg'} alt=\"gradient\"/>\r\n            <div className=\"grid\">\r\n                <div className=\"item_1_4 item_md_4 item_lg_4 mt3\">\r\n                    <h2>Data from <a href=\"https://http://www.ncbi.nlm.nih.gov\" target=\"_blank\">PubMed Central</a>\r\n                    </h2>\r\n\r\n                    <div className=\"boxShadow m0\">\r\n                        <form action=\"\" className=\"searchForm\" onSubmit={searchItemsByInputValue}>\r\n                            <input type=\"text\" className=\"searchInput\" onChange={(e) => changeInputSearch(e)}\r\n                                   value={inputSearchValue}/>\r\n                            <button className=\"submitInputSearch\" type=\"submit\">Find</button>\r\n                        </form>\r\n\r\n                        <p className=\"fz_middle\">There are now <em className=\"undescore\">{countOfOverlap}</em> overlaps\r\n                            according to search by\r\n                            phrase <b>'{query}'</b></p>\r\n                        <p className=\"fz_middle searchSelect_label\">List of Id</p>\r\n                        <select name=\"selectTheId\" id=\"\" className=\"searchSelect\" onChange={(e) => setIdFromSelect(e)}>\r\n                            <option value=\"0\">-Select id-</option>\r\n                            {listOfIdOverlaps.map((el, ind) => {\r\n                                return <option key={el} value={el}>{ind}): {el}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                    <div className=\"boxShadow item_fluid bg_light\">\r\n                        <div className=\"item_1_5 item_md_2 item_lg_3\">\r\n                            <h3 className={`searchItemTitle ${isFoundArticle ? 'colored_green' : 'colored_red'}`}>PMED_ID: {selectedValueId}</h3>\r\n                            {articleText}\r\n                            {articleCitation ?\r\n                                <p className=\"articleCitation\">\r\n                                    <span className=\"undescore\">Abstract:</span>\r\n                                    {articleCitation}\r\n                                </p>\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            <img className=\"gradient_abs gradient_abs__bottom\" src={'/img/gradients/gradient_blue.svg'} alt=\"gradient\"/>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
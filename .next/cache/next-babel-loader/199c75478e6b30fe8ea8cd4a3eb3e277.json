{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"H:\\\\PRACTICE\\\\sugarWebSite\\\\sugar\\\\components\\\\pubMedComponent.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport './components.css';\nexport function PubMedComponent() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      countOfOverlap = _useState[0],\n      setCountOfOverlap = _useState[1];\n\n  var _useState2 = useState([]),\n      listOfIdOverlaps = _useState2[0],\n      setListOfIdOverlaps = _useState2[1];\n\n  var _useState3 = useState('sugar intake'),\n      query = _useState3[0],\n      setQuery = _useState3[1];\n\n  var _useState4 = useState(''),\n      inputSearchValue = _useState4[0],\n      setInputSearchValue = _useState4[1];\n\n  var _useState5 = useState(listOfIdOverlaps[0]),\n      selectedValueId = _useState5[0],\n      setSelectedValueId = _useState5[1];\n\n  var apiPub = \"http://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&retmode=json&retmax=1000&term=\".concat(query.split(' ').join('+'), \"&field=title\");\n  var fetchMoreFromId = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=\".concat(selectedValueId);\n  var searchArticleById = \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=\".concat(selectedValueId, \"&retmode=json\");\n\n  var _useState6 = useState(false),\n      isFoundArticle = _useState6[0],\n      setIsFoundArticle = _useState6[1];\n\n  var _useState7 = useState(),\n      articleText = _useState7[0],\n      setArticleText = _useState7[1];\n\n  var _useState8 = useState(''),\n      articleCitation = _useState8[0],\n      setArticleCitation = _useState8[1];\n\n  useEffect(function () {\n    getDataFromSearch();\n  }, [query]);\n\n  var getDataFromSearch = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://cors-anywhere.herokuapp.com/\".concat(apiPub));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              res = _context.sent;\n              // console.log(data.hits);\n              setCountOfOverlap(res.esearchresult.count);\n              setListOfIdOverlaps(res.esearchresult.idlist);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getDataFromSearch() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var changeInputSearch = function changeInputSearch(e) {\n    setInputSearchValue(e.target.value);\n  };\n\n  var searchItemsByInputValue = function searchItemsByInputValue(e) {\n    e.preventDefault();\n    setCountOfOverlap(0);\n    setQuery(inputSearchValue);\n    setInputSearchValue('');\n  };\n\n  var searchItemsBySelectedId = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data, res, resultJson, article, message;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"https://cors-anywhere.herokuapp.com/\".concat(searchArticleById));\n\n            case 2:\n              data = _context2.sent;\n              _context2.next = 5;\n              return data.json();\n\n            case 5:\n              res = _context2.sent;\n              resultJson = res.result[selectedValueId]; // console.log(resultJson);\n\n              if (resultJson) {\n                article = __jsx(\"div\", {\n                  className: \"item_1_5 item_md_2 item_lg_3 flex-full\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 29\n                  }\n                }, __jsx(\"h4\", {\n                  className: \"article_title\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 17\n                  }\n                }, res.result[selectedValueId].title), __jsx(\"p\", {\n                  className: \"article_date\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 17\n                  }\n                }, res.result[selectedValueId].pubdate), __jsx(\"p\", {\n                  className: \"article_source\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 17\n                  }\n                }, __jsx(\"span\", {\n                  className: \"undescore\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 47\n                  }\n                }, \"Source:\"), \" \", res.result[selectedValueId].source), __jsx(\"p\", {\n                  className: \"article_journal\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 17\n                  }\n                }, __jsx(\"span\", {\n                  className: \"undescore\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 48\n                  }\n                }, \"From journal:\"), \" \", res.result[selectedValueId].fulljournalname), __jsx(\"p\", {\n                  className: \"article_authors\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 17\n                  }\n                }, __jsx(\"span\", {\n                  className: \"undescore\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 48\n                  }\n                }, \"Authors:\"), \" \", res.result[selectedValueId].authors.map(function (el) {\n                  return el.name;\n                }).join(', ')));\n                setArticleText(article);\n                setIsFoundArticle(true);\n              } else {\n                message = __jsx(\"p\", {\n                  className: \"notFound\",\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 29\n                  }\n                }, \"Not found any information .. or it's private article\");\n                setArticleText(message);\n                setIsFoundArticle(false);\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function searchItemsBySelectedId() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var fetchMoreFromSelectedId = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var data, res, textCitation, text;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"https://cors-anywhere.herokuapp.com/\".concat(fetchMoreFromId));\n\n            case 2:\n              data = _context3.sent;\n              _context3.next = 5;\n              return data.text();\n\n            case 5:\n              res = _context3.sent;\n              textCitation = ''; // console.log(res);\n\n              if (res) {\n                text = res.split('abstract')[1];\n\n                if (text) {\n                  textCitation = text.split('pmid')[0];\n                } else {\n                  textCitation = text;\n                }\n              } else {\n                textCitation = \"Not found any citation\";\n              }\n\n              setArticleCitation(textCitation);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function fetchMoreFromSelectedId() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var setIdFromSelect = function setIdFromSelect(e) {\n    setSelectedValueId(e.target.value);\n    searchItemsBySelectedId();\n    fetchMoreFromSelectedId();\n  };\n\n  return __jsx(\"div\", {\n    className: \"grid_container zIndex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: \"gradient_abs gradient_abs__top\",\n    src: '/img/gradients/gradient_blue.svg',\n    alt: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"item_1_4 item_md_4 item_lg_4 mt3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Data from \", __jsx(\"a\", {\n    href: \"https://http://www.ncbi.nlm.nih.gov\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 35\n    }\n  }, \"PubMed Central\")), __jsx(\"div\", {\n    className: \"boxShadow m0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    action: \"\",\n    className: \"searchForm\",\n    onSubmit: searchItemsByInputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"searchInput\",\n    onChange: function onChange(e) {\n      return changeInputSearch(e);\n    },\n    value: inputSearchValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }), __jsx(\"button\", {\n    className: \"submitInputSearch\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, \"Find\")), __jsx(\"p\", {\n    className: \"fz_middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"There are now \", __jsx(\"em\", {\n    className: \"undescore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 64\n    }\n  }, countOfOverlap), \" overlaps according to search by phrase \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 36\n    }\n  }, \"'\", query, \"'\")), __jsx(\"p\", {\n    className: \"fz_middle searchSelect_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"List of Id\"), __jsx(\"select\", {\n    name: \"selectTheId\",\n    id: \"\",\n    className: \"searchSelect\",\n    onChange: function onChange(e) {\n      return setIdFromSelect(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, __jsx(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"-Select id-\"), listOfIdOverlaps.map(function (el, ind) {\n    return __jsx(\"option\", {\n      key: el,\n      value: el,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 40\n      }\n    }, ind, \"): \", el);\n  })))), __jsx(\"div\", {\n    className: \"boxShadow item_fluid bg_light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"item_1_5 item_md_2 item_lg_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, __jsx(\"h3\", {\n    className: \"searchItemTitle \".concat(isFoundArticle ? 'colored_green' : 'colored_red'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, \"PMED_ID: \", selectedValueId), articleText, articleCitation ? __jsx(\"p\", {\n    className: \"articleCitation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    className: \"undescore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, \"Abstract:\"), articleCitation) : null))), __jsx(\"img\", {\n    className: \"gradient_abs gradient_abs__bottom\",\n    src: '/img/gradients/gradient_blue.svg',\n    alt: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(PubMedComponent, \"neynTkCC1sLVri2ULz/1oplDy0M=\");\n\n_c = PubMedComponent;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"PubMedComponent\");","map":{"version":3,"sources":["H:/PRACTICE/sugarWebSite/sugar/components/pubMedComponent.js"],"names":["React","useEffect","useState","PubMedComponent","countOfOverlap","setCountOfOverlap","listOfIdOverlaps","setListOfIdOverlaps","query","setQuery","inputSearchValue","setInputSearchValue","selectedValueId","setSelectedValueId","apiPub","split","join","fetchMoreFromId","searchArticleById","isFoundArticle","setIsFoundArticle","articleText","setArticleText","articleCitation","setArticleCitation","getDataFromSearch","fetch","response","json","res","esearchresult","count","idlist","changeInputSearch","e","target","value","searchItemsByInputValue","preventDefault","searchItemsBySelectedId","data","resultJson","result","article","title","pubdate","source","fulljournalname","authors","map","el","name","message","fetchMoreFromSelectedId","text","textCitation","setIdFromSelect","ind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAO,kBAAP;AAEA,OAAO,SAASC,eAAT,GAA2B;AAAA;;AAAA;;AAAA,kBAEcD,QAAQ,CAAC,CAAD,CAFtB;AAAA,MAEvBE,cAFuB;AAAA,MAEPC,iBAFO;;AAAA,mBAGkBH,QAAQ,CAAC,EAAD,CAH1B;AAAA,MAGvBI,gBAHuB;AAAA,MAGLC,mBAHK;;AAAA,mBAKJL,QAAQ,CAAC,cAAD,CALJ;AAAA,MAKvBM,KALuB;AAAA,MAKhBC,QALgB;;AAAA,mBAMkBP,QAAQ,CAAC,EAAD,CAN1B;AAAA,MAMvBQ,gBANuB;AAAA,MAMLC,mBANK;;AAAA,mBAOgBT,QAAQ,CAACI,gBAAgB,CAAC,CAAD,CAAjB,CAPxB;AAAA,MAOvBM,eAPuB;AAAA,MAONC,kBAPM;;AAS9B,MAAMC,MAAM,+GAAwGN,KAAK,CAACO,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,GAAtB,CAAxG,iBAAZ;AACA,MAAMC,eAAe,oFAA6EL,eAA7E,CAArB;AACA,MAAMM,iBAAiB,sFAA+EN,eAA/E,kBAAvB;;AAX8B,mBAYcV,QAAQ,CAAC,KAAD,CAZtB;AAAA,MAYvBiB,cAZuB;AAAA,MAYPC,iBAZO;;AAAA,mBAaQlB,QAAQ,EAbhB;AAAA,MAavBmB,WAbuB;AAAA,MAaVC,cAbU;;AAAA,mBAcgBpB,QAAQ,CAAC,EAAD,CAdxB;AAAA,MAcvBqB,eAduB;AAAA,MAcNC,kBAdM;;AAgB9BvB,EAAAA,SAAS,CAAC,YAAM;AACZwB,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,CAACjB,KAAD,CAFM,CAAT;;AAIA,MAAMiB,iBAAiB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCC,KAAK,+CAAwCZ,MAAxC,EADN;;AAAA;AAChBa,cAAAA,QADgB;AAAA;AAAA,qBAEJA,QAAQ,CAACC,IAAT,EAFI;;AAAA;AAEhBC,cAAAA,GAFgB;AAGtB;AACAxB,cAAAA,iBAAiB,CAACwB,GAAG,CAACC,aAAJ,CAAkBC,KAAnB,CAAjB;AACAxB,cAAAA,mBAAmB,CAACsB,GAAG,CAACC,aAAJ,CAAkBE,MAAnB,CAAnB;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBP,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AAQA,MAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC7BvB,IAAAA,mBAAmB,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AACH,GAFD;;AAIA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACH,CAAD,EAAO;AACnCA,IAAAA,CAAC,CAACI,cAAF;AACAjC,IAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACAI,IAAAA,QAAQ,CAACC,gBAAD,CAAR;AACAC,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACH,GALD;;AAOA,MAAM4B,uBAAuB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACTb,KAAK,+CAAwCR,iBAAxC,EADI;;AAAA;AACtBsB,cAAAA,IADsB;AAAA;AAAA,qBAEVA,IAAI,CAACZ,IAAL,EAFU;;AAAA;AAEtBC,cAAAA,GAFsB;AAItBY,cAAAA,UAJsB,GAITZ,GAAG,CAACa,MAAJ,CAAW9B,eAAX,CAJS,EAK5B;;AACA,kBAAI6B,UAAJ,EAAgB;AACNE,gBAAAA,OADM,GACI;AAAK,kBAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZ;AAAI,kBAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA+Bd,GAAG,CAACa,MAAJ,CAAW9B,eAAX,EAA4BgC,KAA3D,CADY,EAEZ;AAAG,kBAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA6Bf,GAAG,CAACa,MAAJ,CAAW9B,eAAX,EAA4BiC,OAAzD,CAFY,EAGZ;AAAG,kBAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA8B;AAC1B,kBAAA,SAAS,EAAC,WADgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA9B,OAC0ChB,GAAG,CAACa,MAAJ,CAAW9B,eAAX,EAA4BkC,MADtE,CAHY,EAKZ;AAAG,kBAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA+B;AAC3B,kBAAA,SAAS,EAAC,WADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA/B,OACgDjB,GAAG,CAACa,MAAJ,CAAW9B,eAAX,EAA4BmC,eAD5E,CALY,EAOZ;AAAG,kBAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA+B;AAC3B,kBAAA,SAAS,EAAC,WADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA/B,OAC2ClB,GAAG,CAACa,MAAJ,CAAW9B,eAAX,EAA4BoC,OAA5B,CAAoCC,GAApC,CAAwC,UAAAC,EAAE;AAAA,yBAAIA,EAAE,CAACC,IAAP;AAAA,iBAA1C,EAAuDnC,IAAvD,CAA4D,IAA5D,CAD3C,CAPY,CADJ;AAYZM,gBAAAA,cAAc,CAACqB,OAAD,CAAd;AACAvB,gBAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,eAdD,MAcO;AACGgC,gBAAAA,OADH,GACa;AAAG,kBAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EADb;AAEH9B,gBAAAA,cAAc,CAAC8B,OAAD,CAAd;AACAhC,gBAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH;;AAxB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAvBmB,uBAAuB;AAAA;AAAA;AAAA,KAA7B;;AA2BA,MAAMc,uBAAuB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACT3B,KAAK,+CAAwCT,eAAxC,EADI;;AAAA;AACtBuB,cAAAA,IADsB;AAAA;AAAA,qBAEVA,IAAI,CAACc,IAAL,EAFU;;AAAA;AAEtBzB,cAAAA,GAFsB;AAGxB0B,cAAAA,YAHwB,GAGT,EAHS,EAI5B;;AACA,kBAAI1B,GAAJ,EAAS;AACCyB,gBAAAA,IADD,GACQzB,GAAG,CAACd,KAAJ,CAAU,UAAV,EAAsB,CAAtB,CADR;;AAEL,oBAAIuC,IAAJ,EAAU;AACNC,kBAAAA,YAAY,GAAGD,IAAI,CAACvC,KAAL,CAAW,MAAX,EAAmB,CAAnB,CAAf;AACH,iBAFD,MAEO;AACHwC,kBAAAA,YAAY,GAAGD,IAAf;AACH;AACJ,eAPD,MAOO;AACHC,gBAAAA,YAAY,GAAG,wBAAf;AACH;;AACD/B,cAAAA,kBAAkB,CAAC+B,YAAD,CAAlB;;AAf4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAvBF,uBAAuB;AAAA;AAAA;AAAA,KAA7B;;AAkBA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACtB,CAAD,EAAO;AAC3BrB,IAAAA,kBAAkB,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACAG,IAAAA,uBAAuB;AACvBc,IAAAA,uBAAuB;AAC1B,GAJD;;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,IAAA,GAAG,EAAE,kCAArD;AAAyF,IAAA,GAAG,EAAC,UAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAc;AAAG,IAAA,IAAI,EAAC,qCAAR;AAA8C,IAAA,MAAM,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAd,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,SAAS,EAAC,YAA1B;AAAuC,IAAA,QAAQ,EAAEhB,uBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAA2C,IAAA,QAAQ,EAAE,kBAACH,CAAD;AAAA,aAAOD,iBAAiB,CAACC,CAAD,CAAxB;AAAA,KAArD;AACO,IAAA,KAAK,EAAExB,gBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,CADJ,EAOI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuC;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BN,cAA3B,CAAvC,8CAEW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKI,KAAL,MAFX,CAPJ,EAUI;AAAG,IAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,EAWI;AAAQ,IAAA,IAAI,EAAC,aAAb;AAA2B,IAAA,EAAE,EAAC,EAA9B;AAAiC,IAAA,SAAS,EAAC,cAA3C;AAA0D,IAAA,QAAQ,EAAE,kBAAC0B,CAAD;AAAA,aAAOsB,eAAe,CAACtB,CAAD,CAAtB;AAAA,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEK5B,gBAAgB,CAAC2C,GAAjB,CAAqB,UAACC,EAAD,EAAKO,GAAL,EAAa;AAC/B,WAAO;AAAQ,MAAA,GAAG,EAAEP,EAAb;AAAiB,MAAA,KAAK,EAAEA,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BO,GAA7B,SAAqCP,EAArC,CAAP;AACH,GAFA,CAFL,CAXJ,CAJJ,CADJ,EAyBQ;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,4BAAqB/B,cAAc,GAAG,eAAH,GAAqB,aAAxD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgGP,eAAhG,CADJ,EAEKS,WAFL,EAGKE,eAAe,GACZ;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKA,eAFL,CADY,GAKV,IARV,CADJ,CAzBR,CAFJ,EAwCI;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAmD,IAAA,GAAG,EAAE,kCAAxD;AAA4F,IAAA,GAAG,EAAC,UAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCJ,CADJ;AA4CH;;GAtIepB,e;;KAAAA,e;AAsIf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport './components.css';\r\n\r\nexport function PubMedComponent() {\r\n\r\n    const [countOfOverlap, setCountOfOverlap] = useState(0);\r\n    const [listOfIdOverlaps, setListOfIdOverlaps] = useState([]);\r\n\r\n    const [query, setQuery] = useState('sugar intake');\r\n    const [inputSearchValue, setInputSearchValue] = useState('');\r\n    const [selectedValueId, setSelectedValueId] = useState(listOfIdOverlaps[0]);\r\n\r\n    const apiPub = `http://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&retmode=json&retmax=1000&term=${query.split(' ').join('+')}&field=title`;\r\n    const fetchMoreFromId = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=${selectedValueId}`;\r\n    const searchArticleById = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=${selectedValueId}&retmode=json`;\r\n    const [isFoundArticle, setIsFoundArticle] = useState(false);\r\n    const [articleText, setArticleText] = useState();\r\n    const [articleCitation, setArticleCitation] = useState('');\r\n\r\n    useEffect(() => {\r\n        getDataFromSearch()\r\n    }, [query]);\r\n\r\n    const getDataFromSearch = async () => {\r\n        const response = await fetch(`https://cors-anywhere.herokuapp.com/${apiPub}`);\r\n        const res = await response.json();\r\n        // console.log(data.hits);\r\n        setCountOfOverlap(res.esearchresult.count);\r\n        setListOfIdOverlaps(res.esearchresult.idlist);\r\n    };\r\n\r\n    const changeInputSearch = (e) => {\r\n        setInputSearchValue(e.target.value)\r\n    };\r\n\r\n    const searchItemsByInputValue = (e) => {\r\n        e.preventDefault();\r\n        setCountOfOverlap(0);\r\n        setQuery(inputSearchValue);\r\n        setInputSearchValue('');\r\n    };\r\n\r\n    const searchItemsBySelectedId = async () => {\r\n        const data = await fetch(`https://cors-anywhere.herokuapp.com/${searchArticleById}`);\r\n        const res = await data.json();\r\n\r\n        const resultJson = res.result[selectedValueId];\r\n        // console.log(resultJson);\r\n        if (resultJson) {\r\n            const article = <div className=\"item_1_5 item_md_2 item_lg_3 flex-full\">\r\n                <h4 className=\"article_title\">{res.result[selectedValueId].title}</h4>\r\n                <p className=\"article_date\">{res.result[selectedValueId].pubdate}</p>\r\n                <p className=\"article_source\"><span\r\n                    className=\"undescore\">Source:</span> {res.result[selectedValueId].source}</p>\r\n                <p className=\"article_journal\"><span\r\n                    className=\"undescore\">From journal:</span> {res.result[selectedValueId].fulljournalname}</p>\r\n                <p className=\"article_authors\"><span\r\n                    className=\"undescore\">Authors:</span> {res.result[selectedValueId].authors.map(el => el.name).join(', ')}\r\n                </p>\r\n            </div>;\r\n            setArticleText(article);\r\n            setIsFoundArticle(true)\r\n        } else {\r\n            const message = <p className=\"notFound\">Not found any information .. or it's private article</p>\r\n            setArticleText(message);\r\n            setIsFoundArticle(false)\r\n        }\r\n    };\r\n\r\n    const fetchMoreFromSelectedId = async () => {\r\n        const data = await fetch(`https://cors-anywhere.herokuapp.com/${fetchMoreFromId}`);\r\n        const res = await data.text();\r\n        let textCitation = '';\r\n        // console.log(res);\r\n        if (res) {\r\n            const text = res.split('abstract')[1];\r\n            if (text) {\r\n                textCitation = text.split('pmid')[0];\r\n            } else {\r\n                textCitation = text\r\n            }\r\n        } else {\r\n            textCitation = \"Not found any citation\";\r\n        }\r\n        setArticleCitation(textCitation);\r\n    };\r\n\r\n    const setIdFromSelect = (e) => {\r\n        setSelectedValueId(e.target.value);\r\n        searchItemsBySelectedId();\r\n        fetchMoreFromSelectedId();\r\n    };\r\n\r\n    return (\r\n        <div className=\"grid_container zIndex\">\r\n            <img className=\"gradient_abs gradient_abs__top\" src={'/img/gradients/gradient_blue.svg'} alt=\"gradient\"/>\r\n            <div className=\"grid\">\r\n                <div className=\"item_1_4 item_md_4 item_lg_4 mt3\">\r\n                    <h2>Data from <a href=\"https://http://www.ncbi.nlm.nih.gov\" target=\"_blank\">PubMed Central</a>\r\n                    </h2>\r\n\r\n                    <div className=\"boxShadow m0\">\r\n                        <form action=\"\" className=\"searchForm\" onSubmit={searchItemsByInputValue}>\r\n                            <input type=\"text\" className=\"searchInput\" onChange={(e) => changeInputSearch(e)}\r\n                                   value={inputSearchValue}/>\r\n                            <button className=\"submitInputSearch\" type=\"submit\">Find</button>\r\n                        </form>\r\n\r\n                        <p className=\"fz_middle\">There are now <em className=\"undescore\">{countOfOverlap}</em> overlaps\r\n                            according to search by\r\n                            phrase <b>'{query}'</b></p>\r\n                        <p className=\"fz_middle searchSelect_label\">List of Id</p>\r\n                        <select name=\"selectTheId\" id=\"\" className=\"searchSelect\" onChange={(e) => setIdFromSelect(e)}>\r\n                            <option value=\"0\">-Select id-</option>\r\n                            {listOfIdOverlaps.map((el, ind) => {\r\n                                return <option key={el} value={el}>{ind}): {el}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                    <div className=\"boxShadow item_fluid bg_light\">\r\n                        <div className=\"item_1_5 item_md_2 item_lg_3\">\r\n                            <h3 className={`searchItemTitle ${isFoundArticle ? 'colored_green' : 'colored_red'}`}>PMED_ID: {selectedValueId}</h3>\r\n                            {articleText}\r\n                            {articleCitation ?\r\n                                <p className=\"articleCitation\">\r\n                                    <span className=\"undescore\">Abstract:</span>\r\n                                    {articleCitation}\r\n                                </p>\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            <img className=\"gradient_abs gradient_abs__bottom\" src={'/img/gradients/gradient_blue.svg'} alt=\"gradient\"/>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}